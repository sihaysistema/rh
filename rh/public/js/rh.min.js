(function () {
  'use strict';

  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //
  //

  var script = {
    props: ["question"],
    data: function data() {
      return {
        selected: "",
        positive_keys: [
          { text: "Very Inaccurate", value: 1 },
          { text: "Moderately Inaccurate", value: 2 },
          { text: "Neither Inaccurate nor Accurate", value: 3 },
          { text: "Moderately Accurate", value: 4 },
          { text: "Very Accurate", value: 5 } ],
        negative_keys: [
          { text: "Very Inaccurate", value: 5 },
          { text: "Moderately Inaccurate", value: 4 },
          { text: "Neither Inaccurate nor Accurate", value: 3 },
          { text: "Moderately Accurate", value: 2 },
          { text: "Very Accurate", value: 1 } ],
      };
    },
    methods: {
      emitirEvento: function emitirEvento() {
        this.$emit("selected", this.selected);
      },
    },
  };

  /* script */
              var __vue_script__ = script;
              
  /* template */
  var __vue_render__ = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c(
      "div",
      [
        _c("h4", { staticClass: "font-weight-bold" }, [
          _vm._v(_vm._s(_vm.question.text))
        ]),
        _vm._v(" "),
        _vm._l(_vm.positive_keys, function(option) {
          return _c(
            "div",
            { key: option.text, staticClass: "custom-control custom-radio" },
            [
              _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.selected,
                    expression: "selected"
                  }
                ],
                staticClass: "custom-control-input",
                attrs: {
                  type: "radio",
                  id: [_vm.question.name + "-" + option.value],
                  name: [_vm.question.name + "-" + option.value]
                },
                domProps: {
                  value: option.text,
                  checked: _vm._q(_vm.selected, option.text)
                },
                on: {
                  change: [
                    function($event) {
                      _vm.selected = option.text;
                    },
                    _vm.emitirEvento
                  ]
                }
              }),
              _vm._v(" "),
              _c(
                "label",
                {
                  staticClass: "custom-control-label",
                  attrs: { for: [_vm.question.name + "-" + option.value] }
                },
                [_vm._v(_vm._s(option.text))]
              )
            ]
          )
        }),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("span", [_vm._v("Eligió: " + _vm._s(_vm.selected))]),
        _vm._v(" "),
        _c("br"),
        _vm._v(" "),
        _c("br")
      ],
      2
    )
  };
  var __vue_staticRenderFns__ = [];
  __vue_render__._withStripped = true;

    /* style */
    var __vue_inject_styles__ = function (inject) {
      if (!inject) { return }
      inject("data-v-76c0347c_0", { source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", map: {"version":3,"sources":[],"names":[],"mappings":"","file":"Question.vue"}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__ = "data-v-76c0347c";
    /* module identifier */
    var __vue_module_identifier__ = undefined;
    /* functional template */
    var __vue_is_functional_template__ = false;
    /* component normalizer */
    function __vue_normalize__(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/home/mario/frappe-bench/apps/rh/rh/public/js/components/Question.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var Question = __vue_normalize__(
      { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
      __vue_inject_styles__,
      __vue_script__,
      __vue_scope_id__,
      __vue_is_functional_template__,
      __vue_module_identifier__,
      __vue_create_injector__,
      undefined
    );

  //
  var script$1 = {
    name: "MainBigFive",
    components: {
      Question: Question,
    },
    data: function data() {
      return {
        questions: [],
        responseByCategory: [],
      };
    },
    mounted: function mounted() {
      var _this = this;

      frappe.call({
        method: "rh.api.get_questions",
        callback: function (data) {
          _this.questions = data.message;
          console.log(data.message);
        },
      });
    },
    methods: {
      // Emision de eventos
      optSelected: function optSelected(option) {
        console.log("Seleccionó: ", option);
      },
    },
  };

  /* script */
              var __vue_script__$1 = script$1;
              
  /* template */
  var __vue_render__$1 = function() {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c(
      "div",
      [
        _vm._m(0),
        _vm._v(" "),
        _vm._l(_vm.questions, function(question) {
          return _c("Question", {
            key: question.name,
            attrs: { question: question },
            on: {
              selected: function($event) {
                return _vm.optSelected($event)
              }
            }
          })
        })
      ],
      2
    )
  };
  var __vue_staticRenderFns__$1 = [
    function() {
      var _vm = this;
      var _h = _vm.$createElement;
      var _c = _vm._self._c || _h;
      return _c(
        "div",
        { staticClass: "progress mb-4", staticStyle: { height: "25px" } },
        [
          _c(
            "div",
            {
              staticClass: "progress-bar",
              staticStyle: { width: "25%" },
              attrs: {
                role: "progressbar",
                "aria-valuenow": "25",
                "aria-valuemin": "0",
                "aria-valuemax": "100"
              }
            },
            [_vm._v("\n      25%\n    ")]
          )
        ]
      )
    }
  ];
  __vue_render__$1._withStripped = true;

    /* style */
    var __vue_inject_styles__$1 = function (inject) {
      if (!inject) { return }
      inject("data-v-1b9e428c_0", { source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", map: {"version":3,"sources":[],"names":[],"mappings":"","file":"MainBigFive.vue"}, media: undefined });

    };
    /* scoped */
    var __vue_scope_id__$1 = undefined;
    /* module identifier */
    var __vue_module_identifier__$1 = undefined;
    /* functional template */
    var __vue_is_functional_template__$1 = false;
    /* component normalizer */
    function __vue_normalize__$1(
      template, style, script,
      scope, functional, moduleIdentifier,
      createInjector, createInjectorSSR
    ) {
      var component = (typeof script === 'function' ? script.options : script) || {};

      // For security concerns, we use only base name in production mode.
      component.__file = "/home/mario/frappe-bench/apps/rh/rh/public/js/MainBigFive.vue";

      if (!component.render) {
        component.render = template.render;
        component.staticRenderFns = template.staticRenderFns;
        component._compiled = true;

        if (functional) { component.functional = true; }
      }

      component._scopeId = scope;

      {
        var hook;
        if (style) {
          hook = function(context) {
            style.call(this, createInjector(context));
          };
        }

        if (hook !== undefined) {
          if (component.functional) {
            // register for functional component in vue file
            var originalRender = component.render;
            component.render = function renderWithStyleInjection(h, context) {
              hook.call(context);
              return originalRender(h, context)
            };
          } else {
            // inject component registration as beforeCreate hook
            var existing = component.beforeCreate;
            component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
          }
        }
      }

      return component
    }
    /* style inject */
    function __vue_create_injector__$1() {
      var head = document.head || document.getElementsByTagName('head')[0];
      var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});
      var isOldIE =
        typeof navigator !== 'undefined' &&
        /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

      return function addStyle(id, css) {
        if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

        var group = isOldIE ? css.media || 'default' : id;
        var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

        if (!style.ids.includes(id)) {
          var code = css.source;
          var index = style.ids.length;

          style.ids.push(id);

          if (isOldIE) {
            style.element = style.element || document.querySelector('style[data-group=' + group + ']');
          }

          if (!style.element) {
            var el = style.element = document.createElement('style');
            el.type = 'text/css';

            if (css.media) { el.setAttribute('media', css.media); }
            if (isOldIE) {
              el.setAttribute('data-group', group);
              el.setAttribute('data-next-index', '0');
            }

            head.appendChild(el);
          }

          if (isOldIE) {
            index = parseInt(style.element.getAttribute('data-next-index'));
            style.element.setAttribute('data-next-index', index + 1);
          }

          if (style.element.styleSheet) {
            style.parts.push(code);
            style.element.styleSheet.cssText = style.parts
              .filter(Boolean)
              .join('\n');
          } else {
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index]) { style.element.removeChild(nodes[index]); }
            if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
            else { style.element.appendChild(textNode); }
          }
        }
      }
    }
    /* style inject SSR */
    

    
    var MainBigFive = __vue_normalize__$1(
      { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
      __vue_inject_styles__$1,
      __vue_script__$1,
      __vue_scope_id__$1,
      __vue_is_functional_template__$1,
      __vue_module_identifier__$1,
      __vue_create_injector__$1,
      undefined
    );

  frappe.provide('frappe.rh');   // create a namespace within the Frappe instance

  frappe.rh.BigFiveTest = class {   // create a glue class, wich will manage your Vue instance
    constructor(ref) {
    var parent = ref.parent;

      this.$parent = $(parent);
      this.page = parent.page;
      this.setup_header();
      this.make_body();
    }
    make_body() {
      this.$main_big_five_test = this.$parent.find('.layout-main');   // bind the new Vue instance to the main <div> on the page
      this.vue = new Vue({
        el: this.$main_big_five_test[0],
        data: {
          // timer: ''
        },
        render: function (h) { return h(MainBigFive); },

      });
    }
    setup_header() {
    }
  };

}());
//# sourceMappingURL=rh.min.js.map
