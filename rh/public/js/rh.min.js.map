{"version":3,"file":"rh.min.js","sources":["../../../../apps/rh/rh/public/js/components/Question.vue?rollup-plugin-vue=script.js","../../../../apps/rh/rh/public/js/components/Question.vue","../../../../apps/rh/rh/public/js/MainBigFive.vue?rollup-plugin-vue=script.js","../../../../apps/rh/rh/public/js/MainBigFive.vue","../../../../apps/rh/rh/public/js/main_big_five_test.js"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: [\"counter\", \"question\"],\n  data() {\n    return {\n      selected: \"\",\n      valueForCalculations: {},\n      positive_keys: [\n        { text: \"Very Inaccurate\", value: 1 },\n        { text: \"Moderately Inaccurate\", value: 2 },\n        { text: \"Neither Inaccurate nor Accurate\", value: 3 },\n        { text: \"Moderately Accurate\", value: 4 },\n        { text: \"Very Accurate\", value: 5 },\n      ],\n      negative_keys: [\n        { text: \"Very Inaccurate\", value: 5 },\n        { text: \"Moderately Inaccurate\", value: 4 },\n        { text: \"Neither Inaccurate nor Accurate\", value: 3 },\n        { text: \"Moderately Accurate\", value: 2 },\n        { text: \"Very Accurate\", value: 1 },\n      ],\n    };\n  },\n  methods: {\n    // Emite evento al componente padre, pasando el dato seleccionado\n    emitirEvento() {\n      this.valueForCalculations = {\n        category: this.question.category,\n        value: this.selected.value,\n        name: this.question.name,\n      };\n\n      this.$emit(\"selected\", this.valueForCalculations);\n      //   console.log(\"Usar: \", JSON.stringify(this.valueForCalculations));\n    },\n  },\n};\n","<template>\n  <div class=\"mb-4\">\n    <h4 class=\"font-weight-bold\">{{ counter }}. {{ question.text }}</h4>\n\n    <!-- SI la pregunta es de `key` POSITIVA -->\n    <div class=\"positive_keys mb-2\" v-if=\"question.key === 'POS'\">\n      <div\n        class=\"custom-control custom-radio\"\n        v-for=\"option in positive_keys\"\n        :key=\"option.text\"\n      >\n        <input\n          type=\"radio\"\n          :id=\"[question.name + '-' + option.value]\"\n          :name=\"[question.name + '-' + option.value]\"\n          class=\"custom-control-input\"\n          :value=\"option\"\n          v-model=\"selected\"\n          @change=\"emitirEvento\"\n        />\n        <label\n          class=\"custom-control-label\"\n          :for=\"[question.name + '-' + option.value]\"\n        >\n          {{ option.text }}</label\n        >\n      </div>\n    </div>\n\n    <!-- SI la pregunta es de `key` NEGATIVA -->\n    <div class=\"positive_keys mb-2\" v-if=\"question.key === 'NEG'\">\n      <div\n        class=\"custom-control custom-radio\"\n        v-for=\"option in negative_keys\"\n        :key=\"option.text\"\n      >\n        <input\n          type=\"radio\"\n          :id=\"[question.name + '-' + option.value]\"\n          :name=\"[question.name + '-' + option.value]\"\n          class=\"custom-control-input\"\n          :value=\"option\"\n          v-model=\"selected\"\n          @change=\"emitirEvento\"\n        />\n        <label\n          class=\"custom-control-label\"\n          :for=\"[question.name + '-' + option.value]\"\n        >\n          {{ option.text }}</label\n        >\n      </div>\n    </div>\n\n    <span class=\"mb-3\">Eligió: {{ selected }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"counter\", \"question\"],\n  data() {\n    return {\n      selected: \"\",\n      valueForCalculations: {},\n      positive_keys: [\n        { text: \"Very Inaccurate\", value: 1 },\n        { text: \"Moderately Inaccurate\", value: 2 },\n        { text: \"Neither Inaccurate nor Accurate\", value: 3 },\n        { text: \"Moderately Accurate\", value: 4 },\n        { text: \"Very Accurate\", value: 5 },\n      ],\n      negative_keys: [\n        { text: \"Very Inaccurate\", value: 5 },\n        { text: \"Moderately Inaccurate\", value: 4 },\n        { text: \"Neither Inaccurate nor Accurate\", value: 3 },\n        { text: \"Moderately Accurate\", value: 2 },\n        { text: \"Very Accurate\", value: 1 },\n      ],\n    };\n  },\n  methods: {\n    // Emite evento al componente padre, pasando el dato seleccionado\n    emitirEvento() {\n      this.valueForCalculations = {\n        category: this.question.category,\n        value: this.selected.value,\n        name: this.question.name,\n      };\n\n      this.$emit(\"selected\", this.valueForCalculations);\n      //   console.log(\"Usar: \", JSON.stringify(this.valueForCalculations));\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Question from \"./components/Question.vue\";\nexport default {\n  name: \"MainBigFive\",\n  components: {\n    Question,\n  },\n  data() {\n    return {\n      counter: 0,\n      questions: [],\n      responseByCategory: [],\n      EXTRAVERSION: [],\n      AGREEABLENESS: [],\n      CONSCIENTIOUSNESS: [],\n      NEUROTICISM: [],\n      OPENNESS: [],\n    };\n  },\n  // Al montarse el componente se obtiene todas las preguntas a mostrar\n  mounted() {\n    let _this = this;\n\n    frappe.call({\n      method: \"rh.api.get_questions\",\n      callback: function (data) {\n        _this.questions = data.message;\n        // console.log(data.message);\n      },\n    });\n  },\n  methods: {\n    // Emision de eventos: ver componente Question.vue => emitirEvento()\n    optSelected(option) {\n      console.log(\"Seleccionó: \", JSON.stringify(option));\n      if (option.category === \"EXTRAVERSION\") {\n        console.log(\"ES EXTRAVERSION\");\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.EXTRAVERSION.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.EXTRAVERSION.splice(index, 1);\n          this.EXTRAVERSION.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.EXTRAVERSION.push(option);\n        }\n      }\n\n      if (option.category === \"AGREEABLENESS\") {\n        console.log(\"ES AGREEABLENESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.AGREEABLENESS.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.AGREEABLENESS.splice(index, 1);\n          this.AGREEABLENESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.AGREEABLENESS.push(option);\n        }\n      }\n\n      if (option.category === \"CONSCIENTIOUSNESS\") {\n        console.log(\"ES CONSCIENTIOUSNESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.CONSCIENTIOUSNESS.findIndex(\n          (x) => x.name === option.name\n        );\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.CONSCIENTIOUSNESS.splice(index, 1);\n          this.CONSCIENTIOUSNESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.CONSCIENTIOUSNESS.push(option);\n        }\n      }\n\n      if (option.category === \"NEUROTICISM\") {\n        console.log(\"ES NEUROTICISM\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.NEUROTICISM.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.NEUROTICISM.splice(index, 1);\n          this.NEUROTICISM.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.NEUROTICISM.push(option);\n        }\n      }\n\n      if (option.category === \"OPENNESS\") {\n        console.log(\"ES OPENNESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.OPENNESS.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.OPENNESS.splice(index, 1);\n          this.OPENNESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.OPENNESS.push(option);\n        }\n      }\n    },\n    // Valida la existencia de X clave en un array de objectos\n    verifyExistence(arrayToVerify, name) {\n      return arrayToVerify.some(function (el) {\n        return el.name === name; // true/false\n      });\n    },\n  },\n};\n","<template>\n  <div>\n    <div class=\"progress mb-4\" style=\"height: 25px\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        style=\"width: 25%\"\n        aria-valuenow=\"25\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        25%\n      </div>\n    </div>\n    <code>{{ EXTRAVERSION }}</code>\n    <code>{{ AGREEABLENESS }}</code>\n    <code>{{ CONSCIENTIOUSNESS }}</code>\n    <code>{{ NEUROTICISM }}</code>\n    <code>{{ OPENNESS }}</code>\n    <!-- Probar emitir eventos -->\n    <Question\n      v-for=\"(question, index) in questions\"\n      :key=\"question.name\"\n      :question=\"question\"\n      :counter=\"index + 1\"\n      @selected=\"optSelected($event)\"\n    />\n  </div>\n</template>\n\n<script>\nimport Question from \"./components/Question.vue\";\nexport default {\n  name: \"MainBigFive\",\n  components: {\n    Question,\n  },\n  data() {\n    return {\n      counter: 0,\n      questions: [],\n      responseByCategory: [],\n      EXTRAVERSION: [],\n      AGREEABLENESS: [],\n      CONSCIENTIOUSNESS: [],\n      NEUROTICISM: [],\n      OPENNESS: [],\n    };\n  },\n  // Al montarse el componente se obtiene todas las preguntas a mostrar\n  mounted() {\n    let _this = this;\n\n    frappe.call({\n      method: \"rh.api.get_questions\",\n      callback: function (data) {\n        _this.questions = data.message;\n        // console.log(data.message);\n      },\n    });\n  },\n  methods: {\n    // Emision de eventos: ver componente Question.vue => emitirEvento()\n    optSelected(option) {\n      console.log(\"Seleccionó: \", JSON.stringify(option));\n      if (option.category === \"EXTRAVERSION\") {\n        console.log(\"ES EXTRAVERSION\");\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.EXTRAVERSION.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.EXTRAVERSION.splice(index, 1);\n          this.EXTRAVERSION.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.EXTRAVERSION.push(option);\n        }\n      }\n\n      if (option.category === \"AGREEABLENESS\") {\n        console.log(\"ES AGREEABLENESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.AGREEABLENESS.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.AGREEABLENESS.splice(index, 1);\n          this.AGREEABLENESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.AGREEABLENESS.push(option);\n        }\n      }\n\n      if (option.category === \"CONSCIENTIOUSNESS\") {\n        console.log(\"ES CONSCIENTIOUSNESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.CONSCIENTIOUSNESS.findIndex(\n          (x) => x.name === option.name\n        );\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.CONSCIENTIOUSNESS.splice(index, 1);\n          this.CONSCIENTIOUSNESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.CONSCIENTIOUSNESS.push(option);\n        }\n      }\n\n      if (option.category === \"NEUROTICISM\") {\n        console.log(\"ES NEUROTICISM\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.NEUROTICISM.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.NEUROTICISM.splice(index, 1);\n          this.NEUROTICISM.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.NEUROTICISM.push(option);\n        }\n      }\n\n      if (option.category === \"OPENNESS\") {\n        console.log(\"ES OPENNESS\");\n\n        // Si el elemento ya existe en el array, se elimina y se vuelve a agregar\n        let index = this.OPENNESS.findIndex((x) => x.name === option.name);\n\n        // Si el valor ya existe en el array, se elimina para volverlo a agregarlo\n        // asi asegurar que los calculos se generen correctamente\n        if (index >= 0) {\n          console.log(\"Ya existe\");\n          this.OPENNESS.splice(index, 1);\n          this.OPENNESS.push(option);\n        } else {\n          // Si no existe se agrega\n          console.log(\"No existe\");\n          this.OPENNESS.push(option);\n        }\n      }\n    },\n    // Valida la existencia de X clave en un array de objectos\n    verifyExistence(arrayToVerify, name) {\n      return arrayToVerify.some(function (el) {\n        return el.name === name; // true/false\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>","frappe.provide('frappe.rh');   // create a namespace within the Frappe instance\n\nimport MainBigFive from './MainBigFive.vue';\n\nfrappe.rh.BigFiveTest = class {   // create a glue class, wich will manage your Vue instance\n  constructor({ parent }) {\n    this.$parent = $(parent);\n    this.page = parent.page;\n    this.setup_header();\n    this.make_body();\n  }\n  make_body() {\n    this.$main_big_five_test = this.$parent.find('.layout-main');   // bind the new Vue instance to the main <div> on the page\n    this.vue = new Vue({\n      el: this.$main_big_five_test[0],\n      data: {\n        // timer: ''\n      },\n      render: h => h(MainBigFive),\n\n    });\n  }\n  setup_header() {\n  }\n};"],"names":["const","let","index"],"mappings":"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"}